/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as RoomsIndexImport } from './routes/rooms/index'
import { Route as RoomsMakeImport } from './routes/rooms/make'
import { Route as RoomsRoomIDImport } from './routes/rooms/$roomID'
import { Route as RoomsRoomIDIndexImport } from './routes/rooms/$roomID/index'
import { Route as RoomsRoomIDGameImport } from './routes/rooms/$roomID/game'
import { Route as RoomsRoomIDGameIndexImport } from './routes/rooms/$roomID/game/index'
import { Route as RoomsRoomIDGamePlayImport } from './routes/rooms/$roomID/game/play'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const RoomsIndexRoute = RoomsIndexImport.update({
  id: '/rooms/',
  path: '/rooms/',
  getParentRoute: () => rootRoute,
} as any)

const RoomsMakeRoute = RoomsMakeImport.update({
  id: '/rooms/make',
  path: '/rooms/make',
  getParentRoute: () => rootRoute,
} as any)

const RoomsRoomIDRoute = RoomsRoomIDImport.update({
  id: '/rooms/$roomID',
  path: '/rooms/$roomID',
  getParentRoute: () => rootRoute,
} as any)

const RoomsRoomIDIndexRoute = RoomsRoomIDIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => RoomsRoomIDRoute,
} as any)

const RoomsRoomIDGameRoute = RoomsRoomIDGameImport.update({
  id: '/game',
  path: '/game',
  getParentRoute: () => RoomsRoomIDRoute,
} as any)

const RoomsRoomIDGameIndexRoute = RoomsRoomIDGameIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => RoomsRoomIDGameRoute,
} as any)

const RoomsRoomIDGamePlayRoute = RoomsRoomIDGamePlayImport.update({
  id: '/play',
  path: '/play',
  getParentRoute: () => RoomsRoomIDGameRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/rooms/$roomID': {
      id: '/rooms/$roomID'
      path: '/rooms/$roomID'
      fullPath: '/rooms/$roomID'
      preLoaderRoute: typeof RoomsRoomIDImport
      parentRoute: typeof rootRoute
    }
    '/rooms/make': {
      id: '/rooms/make'
      path: '/rooms/make'
      fullPath: '/rooms/make'
      preLoaderRoute: typeof RoomsMakeImport
      parentRoute: typeof rootRoute
    }
    '/rooms/': {
      id: '/rooms/'
      path: '/rooms'
      fullPath: '/rooms'
      preLoaderRoute: typeof RoomsIndexImport
      parentRoute: typeof rootRoute
    }
    '/rooms/$roomID/game': {
      id: '/rooms/$roomID/game'
      path: '/game'
      fullPath: '/rooms/$roomID/game'
      preLoaderRoute: typeof RoomsRoomIDGameImport
      parentRoute: typeof RoomsRoomIDImport
    }
    '/rooms/$roomID/': {
      id: '/rooms/$roomID/'
      path: '/'
      fullPath: '/rooms/$roomID/'
      preLoaderRoute: typeof RoomsRoomIDIndexImport
      parentRoute: typeof RoomsRoomIDImport
    }
    '/rooms/$roomID/game/play': {
      id: '/rooms/$roomID/game/play'
      path: '/play'
      fullPath: '/rooms/$roomID/game/play'
      preLoaderRoute: typeof RoomsRoomIDGamePlayImport
      parentRoute: typeof RoomsRoomIDGameImport
    }
    '/rooms/$roomID/game/': {
      id: '/rooms/$roomID/game/'
      path: '/'
      fullPath: '/rooms/$roomID/game/'
      preLoaderRoute: typeof RoomsRoomIDGameIndexImport
      parentRoute: typeof RoomsRoomIDGameImport
    }
  }
}

// Create and export the route tree

interface RoomsRoomIDGameRouteChildren {
  RoomsRoomIDGamePlayRoute: typeof RoomsRoomIDGamePlayRoute
  RoomsRoomIDGameIndexRoute: typeof RoomsRoomIDGameIndexRoute
}

const RoomsRoomIDGameRouteChildren: RoomsRoomIDGameRouteChildren = {
  RoomsRoomIDGamePlayRoute: RoomsRoomIDGamePlayRoute,
  RoomsRoomIDGameIndexRoute: RoomsRoomIDGameIndexRoute,
}

const RoomsRoomIDGameRouteWithChildren = RoomsRoomIDGameRoute._addFileChildren(
  RoomsRoomIDGameRouteChildren,
)

interface RoomsRoomIDRouteChildren {
  RoomsRoomIDGameRoute: typeof RoomsRoomIDGameRouteWithChildren
  RoomsRoomIDIndexRoute: typeof RoomsRoomIDIndexRoute
}

const RoomsRoomIDRouteChildren: RoomsRoomIDRouteChildren = {
  RoomsRoomIDGameRoute: RoomsRoomIDGameRouteWithChildren,
  RoomsRoomIDIndexRoute: RoomsRoomIDIndexRoute,
}

const RoomsRoomIDRouteWithChildren = RoomsRoomIDRoute._addFileChildren(
  RoomsRoomIDRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/rooms/$roomID': typeof RoomsRoomIDRouteWithChildren
  '/rooms/make': typeof RoomsMakeRoute
  '/rooms': typeof RoomsIndexRoute
  '/rooms/$roomID/game': typeof RoomsRoomIDGameRouteWithChildren
  '/rooms/$roomID/': typeof RoomsRoomIDIndexRoute
  '/rooms/$roomID/game/play': typeof RoomsRoomIDGamePlayRoute
  '/rooms/$roomID/game/': typeof RoomsRoomIDGameIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/rooms/make': typeof RoomsMakeRoute
  '/rooms': typeof RoomsIndexRoute
  '/rooms/$roomID': typeof RoomsRoomIDIndexRoute
  '/rooms/$roomID/game/play': typeof RoomsRoomIDGamePlayRoute
  '/rooms/$roomID/game': typeof RoomsRoomIDGameIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/rooms/$roomID': typeof RoomsRoomIDRouteWithChildren
  '/rooms/make': typeof RoomsMakeRoute
  '/rooms/': typeof RoomsIndexRoute
  '/rooms/$roomID/game': typeof RoomsRoomIDGameRouteWithChildren
  '/rooms/$roomID/': typeof RoomsRoomIDIndexRoute
  '/rooms/$roomID/game/play': typeof RoomsRoomIDGamePlayRoute
  '/rooms/$roomID/game/': typeof RoomsRoomIDGameIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/rooms/$roomID'
    | '/rooms/make'
    | '/rooms'
    | '/rooms/$roomID/game'
    | '/rooms/$roomID/'
    | '/rooms/$roomID/game/play'
    | '/rooms/$roomID/game/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/rooms/make'
    | '/rooms'
    | '/rooms/$roomID'
    | '/rooms/$roomID/game/play'
    | '/rooms/$roomID/game'
  id:
    | '__root__'
    | '/'
    | '/rooms/$roomID'
    | '/rooms/make'
    | '/rooms/'
    | '/rooms/$roomID/game'
    | '/rooms/$roomID/'
    | '/rooms/$roomID/game/play'
    | '/rooms/$roomID/game/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  RoomsRoomIDRoute: typeof RoomsRoomIDRouteWithChildren
  RoomsMakeRoute: typeof RoomsMakeRoute
  RoomsIndexRoute: typeof RoomsIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  RoomsRoomIDRoute: RoomsRoomIDRouteWithChildren,
  RoomsMakeRoute: RoomsMakeRoute,
  RoomsIndexRoute: RoomsIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/rooms/$roomID",
        "/rooms/make",
        "/rooms/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/rooms/$roomID": {
      "filePath": "rooms/$roomID.tsx",
      "children": [
        "/rooms/$roomID/game",
        "/rooms/$roomID/"
      ]
    },
    "/rooms/make": {
      "filePath": "rooms/make.tsx"
    },
    "/rooms/": {
      "filePath": "rooms/index.tsx"
    },
    "/rooms/$roomID/game": {
      "filePath": "rooms/$roomID/game.tsx",
      "parent": "/rooms/$roomID",
      "children": [
        "/rooms/$roomID/game/play",
        "/rooms/$roomID/game/"
      ]
    },
    "/rooms/$roomID/": {
      "filePath": "rooms/$roomID/index.tsx",
      "parent": "/rooms/$roomID"
    },
    "/rooms/$roomID/game/play": {
      "filePath": "rooms/$roomID/game/play.tsx",
      "parent": "/rooms/$roomID/game"
    },
    "/rooms/$roomID/game/": {
      "filePath": "rooms/$roomID/game/index.tsx",
      "parent": "/rooms/$roomID/game"
    }
  }
}
ROUTE_MANIFEST_END */
